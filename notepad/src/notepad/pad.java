/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;

//import com.sun.glass.events.KeyEvent;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Scanner;
import javax.swing.event.*;
import javax.swing.undo.*;
import static notepad.Svas_dlg.fullpath;

/**
 *
 * @author Abhishek Kumar Singh & Surbhit Awasthi
 *        a.k.a BINARY WARRIORS
 */
public class pad extends javax.swing.JFrame{
public static String s,a="",b="";
    /**
     * Creates new form pad
     */
    
    UndoManager u=new UndoManager();
    public pad() {
        initComponents();
          
            ta.getDocument().addUndoableEditListener(new UndoableEditListener(){
                public void undoableEditHappened(UndoableEditEvent e){
                    u.addEdit(e.getEdit());
                }
            });
            ta.setText(opfl_name.text);
            msv.setEnabled(false);
    }
    
   public String path;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem4 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        btx = new javax.swing.JButton();
        btcl = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnew = new javax.swing.JMenuItem();
        mopen = new javax.swing.JMenuItem();
        msv = new javax.swing.JMenuItem();
        msvas = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mundo = new javax.swing.JMenuItem();
        mredo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mcut = new javax.swing.JMenuItem();
        mcopy = new javax.swing.JMenuItem();
        mpaste = new javax.swing.JMenuItem();
        mdelete = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        time = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        fontmn = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        zoomin = new javax.swing.JMenuItem();
        zoomout = new javax.swing.JMenuItem();

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Binary Warriors Notepad");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitingpad(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ta.setColumns(20);
        ta.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        ta.setLineWrap(true);
        ta.setRows(20);
        ta.setWrapStyleWord(true);
        ta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enterKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(ta);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 620));

        btx.setText("Exit");
        btx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxActionPerformed(evt);
            }
        });
        getContentPane().add(btx, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 640, 79, -1));

        btcl.setText("Clear");
        btcl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btclActionPerformed(evt);
            }
        });
        getContentPane().add(btcl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 640, 72, -1));

        jMenu1.setText("File");

        mnew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnew.setText("New");
        mnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnewActionPerformed(evt);
            }
        });
        jMenu1.add(mnew);

        mopen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mopen.setText("Open...");
        mopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mopenActionPerformed(evt);
            }
        });
        jMenu1.add(mopen);

        msv.setText("Save");
        msv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msvActionPerformed(evt);
            }
        });
        jMenu1.add(msv);

        msvas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        msvas.setText("Save As...");
        msvas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msvasActionPerformed(evt);
            }
        });
        jMenu1.add(msvas);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mundo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        mundo.setText("Undo");
        mundo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mundoActionPerformed(evt);
            }
        });
        jMenu2.add(mundo);

        mredo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        mredo.setText("Redo");
        mredo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mredoActionPerformed(evt);
            }
        });
        jMenu2.add(mredo);
        jMenu2.add(jSeparator1);

        mcut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        mcut.setText("Cut");
        mcut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcutActionPerformed(evt);
            }
        });
        jMenu2.add(mcut);

        mcopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        mcopy.setText("Copy");
        mcopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcopyActionPerformed(evt);
            }
        });
        jMenu2.add(mcopy);

        mpaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        mpaste.setText("Paste");
        mpaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mpasteActionPerformed(evt);
            }
        });
        jMenu2.add(mpaste);

        mdelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        mdelete.setText("Delete");
        jMenu2.add(mdelete);
        jMenu2.add(jSeparator2);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Find");
        jMenu2.add(jMenuItem2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Replace");
        jMenu2.add(jMenuItem5);
        jMenu2.add(jSeparator3);

        time.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        time.setText("Time/date");
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });
        jMenu2.add(time);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem1.setText("Help..");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Format");

        fontmn.setText("Font");
        fontmn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontmnActionPerformed(evt);
            }
        });
        jMenu4.add(fontmn);
        jMenu4.add(jSeparator4);

        zoomin.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_MASK));
        zoomin.setText("Zoon In");
        zoomin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoominActionPerformed(evt);
            }
        });
        jMenu4.add(zoomin);

        zoomout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, java.awt.event.InputEvent.CTRL_MASK));
        zoomout.setText("Zoom Out");
        zoomout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomoutActionPerformed(evt);
            }
        });
        jMenu4.add(zoomout);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btclActionPerformed
ta.setText("");
    }//GEN-LAST:event_btclActionPerformed

    private void btxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxActionPerformed
       exit_dlg ed=new exit_dlg();
       ed.setVisible(true);
    }//GEN-LAST:event_btxActionPerformed

   
    
    private void enterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyPressed
    /* try{   // PrintWriter pw=new PrintWriter(new BufferedWriter(new FileWriter("d://out.txt")));
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
             
               String s=ta.getText();
               FileWriter fw=new FileWriter("d://out.txt",true);
              // pw.println(s);
              // pw.println("\n");
              // s="";
               fw.write(s);
               fw.close();
              
              // System.out.println("Chal rha hai");
          
       }
        // pw.close();
         }catch(Exception e){
               
           }*/
    }//GEN-LAST:event_enterKeyPressed

    private void mnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnewActionPerformed
msv.setEnabled(false);
msvas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
msv.setAccelerator(javax.swing.KeyStroke.getKeyStroke(null));

new_dlg n=new new_dlg();
n.setVisible(true);



    }//GEN-LAST:event_mnewActionPerformed

    private void msvasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msvasActionPerformed
if(msv.isEnabled()==false){
msv.setEnabled(true);
msv.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
msvas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(null));
}
//s=ta.getText();
       fl_name f=new fl_name();
f.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_msvasActionPerformed

    private void mcutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcutActionPerformed
      ta.cut(); // TODO add your handling code here:
    }//GEN-LAST:event_mcutActionPerformed

    private void mcopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcopyActionPerformed
     ta.copy();   // TODO add your handling code here:
    }//GEN-LAST:event_mcopyActionPerformed

    private void mpasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mpasteActionPerformed
       ta.paste(); // TODO add your handling code here:
    }//GEN-LAST:event_mpasteActionPerformed

    private void mopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mopenActionPerformed
if(msv.isEnabled()==false){
msv.setEnabled(true);
msv.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
msvas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(null));
}
        op_dlg o=new op_dlg();
o.setVisible(true);
    }//GEN-LAST:event_mopenActionPerformed

    private void msvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msvActionPerformed
try{ 
        Scanner sc=new Scanner(pad.ta.getText());
        PrintStream ps=new PrintStream(new File(fullpath+fl_name.flnm));
      // ps.append(b);
       
        do{
                 b="";
            a=sc.nextLine();
                 //System.out.println(a);
                b=b+a+"\n";
                ps.println(b);
                
                
               // System.out.println(b);
            }while(sc.hasNextLine());
        ps.close();
           //System.out.println(b);
       // System.out.println("khatam");
        //System.out.println(b);
              /* FileWriter fw=new FileWriter(Svas_dlg.fullpath,true);
              // pw.println(s);
              // pw.println("\n");
              // s="";
               fw.write(s);
               fw.close();*/
    
          //PrintWriter pw=new PrintWriter(new FileWriter("d://out.txt"));  
        //String s=ta.getText();
        
        //pw.println(ta.getText());
        //System.out.println(s);
        
        //FileOutputStream w=new FileOutputStream(/*new File("d://out.txt")*/);
       
        
        //pw.write(s);
        //pw.close();
        
       // /PrintStream ps=new PrintStream(new File("d://out.txt"));
      // ps.append(b);
      // ps.close();
       // FileWriter p=new FileWriter(new File("d://out.txt"));
        //p.write(s);
       // p.close();
        
       // p.append(s);
         }
    catch(Exception e){
    
}         
    }//GEN-LAST:event_msvActionPerformed

    private void mundoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mundoActionPerformed
 try{
            UndoManager u=new UndoManager();
            ta.getDocument().addUndoableEditListener(new UndoableEditListener(){
                public void undoableEditHappened(UndoableEditEvent e){
                    u.addEdit(e.getEdit());
                }
            });
            u.undo();
        }catch(Exception e){
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mundoActionPerformed

    private void mredoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mredoActionPerformed
   try{ 
           ta.getDocument().addUndoableEditListener(new UndoableEditListener(){
                public void undoableEditHappened(UndoableEditEvent e){
                    u.addEdit(e.getEdit());
                }
            });
           u.redo();
       }catch(CannotRedoException cr){
           cr.printStackTrace();
       }     
    }//GEN-LAST:event_mredoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        help h=new help();
        h.setVisible(true);
                
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void exitingpad(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitingpad
       btx.doClick();
    }//GEN-LAST:event_exitingpad

    private void fontmnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontmnActionPerformed
        font_select f=new font_select();
        f.setVisible(true);
    }//GEN-LAST:event_fontmnActionPerformed

    private void zoominActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoominActionPerformed
        font_select.size=font_select.size+3;
        ta.setFont(new java.awt.Font(font_select.font, 0, font_select.size));
    }//GEN-LAST:event_zoominActionPerformed

    private void zoomoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomoutActionPerformed
        font_select.size=font_select.size-3;
        ta.setFont(new java.awt.Font(font_select.font, 0, font_select.size));
    }//GEN-LAST:event_zoomoutActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
       String ts=new SimpleDateFormat("HH:mm:ss_dd-MM-yyyy").format(Calendar.getInstance().getTime());
       ta.append(ts);
    }//GEN-LAST:event_timeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btcl;
    private javax.swing.JButton btx;
    private javax.swing.JMenuItem fontmn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuItem mcopy;
    private javax.swing.JMenuItem mcut;
    private javax.swing.JMenuItem mdelete;
    private javax.swing.JMenuItem mnew;
    private javax.swing.JMenuItem mopen;
    private javax.swing.JMenuItem mpaste;
    private javax.swing.JMenuItem mredo;
    private javax.swing.JMenuItem msv;
    private javax.swing.JMenuItem msvas;
    private javax.swing.JMenuItem mundo;
    public static javax.swing.JTextArea ta;
    private javax.swing.JMenuItem time;
    private javax.swing.JMenuItem zoomin;
    private javax.swing.JMenuItem zoomout;
    // End of variables declaration//GEN-END:variables
}
